<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Lanxiaoke</title>
    <link>http://localhost:1313/post/</link>
    <description>Recent content in Posts on Lanxiaoke</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-EN</language>
    <managingEditor>xiaoke.lan@hand-china.com (Lanxiaoke)</managingEditor>
    <webMaster>xiaoke.lan@hand-china.com (Lanxiaoke)</webMaster>
    <copyright>(c) 2018 lxk.</copyright>
    
	<atom:link href="http://localhost:1313/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>07-12的学习日报</title>
      <link>http://localhost:1313/1/01/01/07-12%E7%9A%84%E5%AD%A6%E4%B9%A0%E6%97%A5%E6%8A%A5/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <author>xiaoke.lan@hand-china.com (Lanxiaoke)</author>
      <guid>http://localhost:1313/1/01/01/07-12%E7%9A%84%E5%AD%A6%E4%B9%A0%E6%97%A5%E6%8A%A5/</guid>
      <description>一 Git操作  熟悉Git操作
 git push 出现&amp;raquo;Already up to date.&amp;raquo;
操作完成后需要完成以下两步
git add .
git commit -m &amp;laquo; &amp;raquo;
 git push 发生冲突
根据提示信息或者 git status 查看发生冲突的文件，根据不同标记做出修改后保存，重新add 和 commit
 markdown语法
 段落与换行
前后都有一个以上的空行 标题
1到6个“#”对应标题1-6阶 块区引用
可嵌套，根据“&amp;gt;”的数量来决定嵌套层数  二 Docker简介  什么是Docker
  Docker是一个开源的引擎，可以轻松的为任何应用创建一个轻量级的、可移植的、自给自足的容器。开发者在笔记本上编译测试通过的容器可以批量地在生产环境中部署，包括VMs（虚拟机）、bare metal、OpenStack 集群和其他的基础应用平台。
 运用场景
  web应用的自动化打包和发布；
自动化测试和持续集成、发布；
在服务型环境中部署和调整数据库或其他的后台应用；
从头编译或者扩展现有的OpenShift或Cloud Foundry平台来搭建自己的PaaS环境。
 安装时碰到的问题  “error in driver during machine creation:This computer doesn’t have VT-X/AMD-v enabled .</description>
    </item>
    
    <item>
      <title>07-13的学习日报</title>
      <link>http://localhost:1313/1/01/01/07-13%E7%9A%84%E5%AD%A6%E4%B9%A0%E6%97%A5%E6%8A%A5/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <author>xiaoke.lan@hand-china.com (Lanxiaoke)</author>
      <guid>http://localhost:1313/1/01/01/07-13%E7%9A%84%E5%AD%A6%E4%B9%A0%E6%97%A5%E6%8A%A5/</guid>
      <description>一 Gitflow的学习 Gitflow工作流通过为功能开发、发布准备和维护分配独立的分支，让发布迭代过程更流畅。严格的分支模型 也为大型项目提供了一些非常必要的结构。
工作方式
Gitflow工作流仍然用中央仓库作为所有开发者的交互中心。和其它的工作流一样，开发者在本地工作并push 分支到要中央仓库中
master分支： 主分支，产品功能全部实现后，在master分支对外发布
develop分支： 开发分支，产品的coding在这进行
release分支： 测试分支，基于develop分支的克隆，测试发现的小bug，在此修复再合并到develop分支
二 docker docker pull
在公司私库拉取nginx镜像
docker run -d 唯一镜像编号
docker run -d -p 8080：80 registry.saas.hand-china.com/tools/nginx
docker build Dockerfile docker ps
*nginx 俄罗斯服务器 轻量 前端服务器
docker machine.exe env
winpty docker exec -it &amp;lt;镜像编号&amp;gt; //bin/bash
docker push &amp;lt;镜像名&amp;gt;
组成dockerhub账号
winpty docker login hub.docker.com
docker tag 贴标签
docker kill &amp;lt;编号&amp;gt;
作业 ：在本地搭个mysql
docker run &amp;ndash;name test-mysql -p 3306:3306 -e MYSQL_ROOT_PASSWORD=root -d registry.</description>
    </item>
    
  </channel>
</rss>